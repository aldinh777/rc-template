const { title, items, color, initial } = props;
const sideState = props.sideState || (props.initial ? state(initial) : state(items[0]?.value || ''));

const tabsObj = {};
const tabList = [];
for (const tab of items) {
    const active = state(false);
    const tabClass =
        typeof color === 'string'
            ? stateObserve(active, (active) =>
                  active
                      ? 'collection-item active ' + color + ' lighten-1'
                      : 'collection-item ' + color + '-text'
              )
            : stateObserveAll([active, color], ([active, color]) =>
                  active
                      ? 'collection-item active ' + color + ' lighten-1'
                      : 'collection-item ' + color + '-text'
              );
    const obj = {
        title: tab.title,
        active: active,
        tabClass: tabClass,
        onClick() {
            sideState.value = tab.value;
        }
    };
    tabsObj[tab.value] = obj;
    tabList.push(obj);
}
observe(sideState, (next, prev) => {
    if (tabsObj[next]) {
        tabsObj[prev].active.value = false;
        tabsObj[next].active.value = true;
    } else {
        sideState.value = items[0]?.value || '';
    }
});

div class="container" <
    h4 <{title}>
>
div class="collection" <
    foreach list="tabList" extract="title tabClass onClick" <
        a bind:class="tabClass" on:click="onClick" <{title}>
    >
>
